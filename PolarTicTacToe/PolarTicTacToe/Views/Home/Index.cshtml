@{
    ViewBag.Title = "Home Page";
    ViewBag.Title = "Play";
    int UserID = ViewBag.User != null ? ViewBag.User.ID : -1;
    long UserFacebookID = ViewBag.User != null ? ViewBag.User.FacebookID : -1;
}

@section ExtraHeaderContent {
<script type="text/javascript" src="/Assets/js/raphael-min.js"></script>
<script type="text/javascript" src="/Assets/js/jquery.tmpl.min.js"></script>
}

@section FooterScripts {
    <script type="text/javascript" src="/assets/js/game.js"></script>
}

<div id="fb-root"></div>
<script>
    var fbAppID = 342700949110604;
    var userFBID;
    var userFirstName;
    var userLastName;
    var opponentFBID;
    var opponentFirstName;
    var opponentLastName;
    var isMyTurn = false;
    var gameId;
    var userId = @UserID;
    var game;
    var fill;
    var friendGameStatus;
    var activeGames;
    var friendGameStatus;
    var gamesHash = {};

    $(document).ready(function () {

        setInterval(function () {
            UpdateFriendsList();
            UpdateGame();
        }, 1000);
       
        window.fbAsyncInit = function () {
            FB.init({
                appId: fbAppID,
                status: true, // check login status
                cookie: true, // enable cookies to allow the server to access the session
                //channelUrl: window.location.protocol + "//" + window.location.hostname + "/fbchannel.html",
                channelUrl: 'http://ec2-23-21-169-98.compute-1.amazonaws.com/channel.html', // Channel File
                oauth: true, //enables OAuth 2.0
                frictionlessRequests : true,
            });

            // Additional initialization code here
            FB.getLoginStatus(function (response) {

                if (response.status === 'connected') {
                    // the user is logged in and connected to your
                    // app, and response.authResponse supplies
                    // the user's ID, a valid access token, a signed
                    // request, and the time the access token 
                    // and signed request each expire
                    var uid = response.authResponse.userID;
                    var accessToken = response.authResponse.accessToken;
                    userFBID = uid;
                    $("#image").show();
                    //alert('the user is logged in and connected ' + uid);
                } else if (response.status === 'not_authorized') {
                    // the user is logged in to Facebook, 
                    //but not connected to the app
                    //alert('not connected to the app ');
                     $("#image").hide();
                } else {
                    // the user isn't even logged in to Facebook.
                    //alert('the user is not  logged in to Facebook.');
                    $("#image").hide();
                }

                FB.api('/me', function (user) {
                    if (user) {
                        var image = document.getElementById('image');
                        image.src = 'http://graph.facebook.com/' + user.id + '/picture'
                        var name = document.getElementById('name');
                        if (user.name !== undefined) {
                            name.innerHTML = "Welcome " + user.name;
                            userFBID = user.id;
                            $("#registerLink").hide();

                            $.ajax({ url: "/home/register", data: { facebookID: user.id, firstName: user.first_name, lastName: user.last_name }, async: true, dataType: "json", type: "post", success: function (data) { } });
                        }
                    }
                });

                UpdateFriendsList();
            });
        };
    });

    $.template("Contact", '<li id="contact-${id}"> ' +
    '<h4>${name}</h4>' +
    '<a href="#" data-game-id="-1">${status}</a>' +
    '</li> ');

    function UpdateFriendsList()
    {
        FB.api('/me/friends', function (friends) { 

            var fbids = [];

            for (var i = 0; i < friends.data.length; i++){
                var friend = friends.data[i];
                fbids.push(friend.id);
                if ($('#contact-' + friend.id).length == 0){
                    $('#friends').append($.tmpl("Contact", { id : friend.id, name : friend.name, status : "invite"}));
                    $('#contact-' +  friend.id + " a").click(function(){
                        Invite(friend.id);
                    });
                }
            }

            SetFriendsGames();
        });
    }

    function SetFriendsGames(){
        
        $.get("/games", null, function(data){    
            activeGames = data;
            for (var i = 0; i < activeGames.length; i++){
                var friendID = -1;
                var status = "";

                if (activeGames[i].PendingPlayerFBID == @UserFacebookID){
                    if (activeGames[i].ChallengerFBID == @UserFacebookID){
                        friendID = activeGames[i].OpponentFBID;
                    }else{
                        friendID = activeGames[i].ChallengerFBID;
                    }
                    status = "waiting";
                }else{
                    status = "your turn";
                    friendID = activeGames[i].PendingPlayerFBID;     
                }

                $('#contact-' + friendID + " a").html(status);
                $('#contact-' + friendID + " a").attr('data-game-id', activeGames[i].ID);

                $('#contact-' + friendID + " a").click(function(){
                    var gameId = parseInt($(this).attr('data-game-id'));
                    LoadGame(gameId);
                });

                gamesHash[activeGames[i].ID] = activeGames[i];
            }
            console.log(data);
        }, "json");
    }


    function DeleteAppRequest(requestId) {
      FB.api(requestId, 'delete', function(response) {
        console.log(response);
      });
    }

    function Invite(FBID) {
        FB.ui({
            method: 'apprequests',
            message: 'I challenge you to a game of Polar TicTacToe!',
            to: FBID,
        }, 
        function requestCallback(response)
        {
            //console.log(FBID);
            if(response && response.request) {   
                $.get('/game/create?OpponentFBID='+FBID+'&appRequest='+response.request, function(data){
                    gameId = data.ID;
                    //game = data;
                });
            } else {
                    // No requests sent, you can do what you want (like...nothing, and stay on the page).
            }
        });
    }  

    function SendMoveAppRequest(FBID) {
        FB.ui({
            method: 'apprequests',
            message: "I just moved. It's your turn.",
            to: FBID,
        }, 
        function requestCallback(response)
        {
            if(response && response.request) {   
                $.get('/game/'+gameId+'/set-app-request?appRequest='+response.request, function(data){});
                curAppRequest = response.request;
            } else {
                // No requests sent, you can do what you want (like...nothing, and stay on the page).
            }
        });
    }  

    function playMove(x, y, section) {
        if(isMyTurn)
        {
            isMyTurn = false;
            DeleteAppRequest(curAppRequest + '_' + userFBID);
            SendMoveAppRequest(opponentFBID)

            $.post("/game/" + gameId + "/playmove", { x: x, y: y }, function (data) {
                if (data.isValid == true) 
                {
                    section.attr({ fill: fill });
                }
                if (data.winner != null){
                    if (data.winner == userId) {
                        $('#winner').html("You are the winner!");
                    }else{
                        $('#winner').html("You lose!");
                    }
                }
            });

            UpdateGame();
        }
    }

     function UpdateGame()
     {
        if(game != null && gameId!= null)
        {
            $.get("/game/" + gameId + "/moves", function (data) {
                
                curAppRequest = data.curAppRequest;                
            
                if (data.PendingPlayerID == userId)
                {    
                    isMyTurn = true;
                    $('#turnDialog').html("It's your turn.");
                }
                else
                {
                    isMyTurn = false;
                    $('#turnDialog').html("Waiting for " + opponentFirstName);
                }

                game.setMoves(data.moves);
                game.draw();
                    if (data.winner != null){
                        if (data.winner == userId){
                            $('#winner').html("You are the winner!");
                        }else{
                            $('#winner').html("You lose!");
                        }
                    }
            }, "json");

        }
    }

    function LoadGame(id) {

        gameId = id;
        
        data = gamesHash[id];
          
        curAppRequest = data.curAppRequest;

        if (data.ChallengerID == userId)
        {  
            fill = "#60af75";
            userFBID = data.ChallengerFBID;
            userFirstName = data.ChallengerFirstName;
            userLastName = data.ChallengerLastName;
            opponentFBID = data.OpponentFBID;
            opponentFirstName = data.OpponentFirstName;
            opponentLastName = data.OpponentLastName;
        }
        else
        {
            fill = "#bb2e36";
            opponentFBID = data.ChallengerFBID;
            opponentFirstName = data.ChallengerFirstName;
            opponentLastName = data.ChallengerLastName;
            userFBID = data.OpponentFBID;
            userFirstName = data.OpponentFirstName;
            userLastName = data.OpponentLastName;
        }
        
        if (data.PendingPlayerID == userId)
        {
            isMyTurn = true;
            $('#turnDialog').html("It's your turn.");
        }
        else
        {
            isMyTurn = false;
            $('#turnDialog').html("Waiting for " + opponentFirstName);
        }

        $('#board').children().remove();

        $.get("/game/" + gameId + "/moves", function (data) {
            game = new DartBoard(null, playMove, data); 
        }, "json");
    }  

    (function () {
        var e = document.createElement('script');
        e.src = document.location.protocol + '//connect.facebook.net/en_US/all.js#xfbml=1';
        e.async = true;
        document.getElementById('fb-root').appendChild(e);
    } ());

</script>

<h2>Template</h2>
<p>
	Konrad Group Template
</p>

@ViewBag.access_token

@*&scope=publish_stream*@
<a  href="https://www.facebook.com/dialog/oauth?client_id=@PolarTicTacToe.Utils.GlobalVars.FB_APP_ID&redirect_uri=@PolarTicTacToe.Utils.GlobalVars.WEBSITE_URL">Register</a>


<img id="image"/>  
<p id="name" style="padding-bottom:7px; font-weight:bold; font-size:13px;" color="white"></p>

Search: <input id="searchText" type="text" />

<ul id="friends">
</ul>

<h2 id="winner"></h2>

<h3 id="turnDialog"></h3>

<div id="board" style="width:500px; height:500px;"></div>

